#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_composer__2
source ynh_exec_as
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
password=$YNH_APP_ARG_PASSWORD
admin=admin
language=$YNH_APP_ARG_LANGUAGE
expiration=$YNH_APP_ARG_EXPIRATION
deletion=$YNH_APP_ARG_DELETION
admin_mail="root@$domain"

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=password --value=$password
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=language --value=$language
ynh_app_setting_set --app=$app --key=expiration --value=$expiration
ynh_app_setting_set --app=$app --key=deletion --value=$deletion

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=7

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Creating a PostgreSQL database..." --weight=2

ynh_psql_test_if_first_run

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_psql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=9

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path/app"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=3

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..." --weight=1

# Create a dedicated php-fpm config
ynh_add_fpm_config --usage=low --footprint=low --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DRUSH ALIAS
#=================================================
ynh_script_progression --message="Creating Drush alias..." --weight=2

mkdir -p "$final_path/.drush"
drush_aliasconfig="$final_path/.drush/$app.aliases.drushrc.php"
cp -f "../conf/yoursite.aliases.drushrc.php" "$drush_aliasconfig"

ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="$drush_aliasconfig"
ynh_replace_string --match_string="__APP__" --replace_string="$app" --target_file="$drush_aliasconfig"
ynh_replace_string --match_string="__DOMAIN__" --replace_string="$domain" --target_file="$drush_aliasconfig"
ynh_replace_string --match_string="__PATH_URL__" --replace_string="$path_url" --target_file="$drush_aliasconfig"

#=================================================
# INSTALL COMPOSER
#=================================================
ynh_script_progression --message="Installing Composer..." --weight=31

mkdir -p "$final_path/.composer"

cp -f "../conf/composer.json" "$final_path/.composer/composer.json"

ynh_install_composer --phpversion="$phpversion" --workdir="$final_path/.composer"

export PATH="$final_path/.composer/vendor/bin:$PATH"

#=================================================
# INITIALIZE TMP AND PRIVATE DIRECTORY
#=================================================
ynh_script_progression --message="Initializing tmp and private directory..." --weight=1

mkdir -p "$final_path/app/sites/default/files"
chmod 2775 "$final_path/app/sites/default/files"
mkdir -p "$final_path/app/sites/default/files/tmp"

mkdir -p "/home/yunohost.app/$app/data"
chown -R $app: "/home/yunohost.app/$app/data"
chmod 775 "/home/yunohost.app/$app/data"

#=================================================
# ADD MISSING IMAGES
#=================================================
#ynh_script_progression --message="Adding missing images..." --weight=2
#
#mkdir -p "$final_path/sites/default/files/imgforms"
#
#cp ../sources/anim_analyse.gif "$final_path/sites/default/files/imgforms/"
#cp ../sources/anim_creation.gif "$final_path/sites/default/files/imgforms/"
#cp ../sources/partager.png "$final_path/sites/default/files/imgforms/"

#=================================================
# MODIFY CONFIG FILES
#=================================================
ynh_script_progression --message="Modifying a config file..." --weight=1

config_file=$final_path/app/sites/default/settings.php

cp ../conf/default.settings.php "$config_file"
ynh_replace_string --match_string="__DB_NAME__" --replace_string="$db_name" --target_file="$config_file"
ynh_replace_string --match_string="__DB_USER__" --replace_string="$db_user" --target_file="$config_file"
ynh_replace_string --match_string="__DB_PWD__" --replace_string="$db_pwd" --target_file="$config_file"
ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="$config_file"

#=================================================
# INSTALLING FRAMAFORMS WITH DRUSH
#=================================================
ynh_script_progression --message="Installing database..." --weight=19

chown -R $app: $final_path

update-alternatives --set php /usr/bin/php$phpversion
ynh_exec_as $app env PATH=$PATH drush @$app site-install framaforms_org  install_configure_form.site_contact_url="https://forum.yunohost.org/t/framaforms-create-polls-using-drag-and-drop/8208" install_configure_form.site_default_country=FR -y --locale="$language" --account-name="admin" --account-pass="$password" --site-name="Framaforms" --site-mail="$admin_mail" 2>&1
ynh_exec_as $app env PATH=$PATH drush @$app variable-set update_notify_emails "$admin_mail"
ynh_exec_as $app env PATH=$PATH drush @$app variable-set file_private_path "/home/yunohost.app/$app/data" 2>&1
ynh_exec_as $app env PATH=$PATH drush @$app pm-enable framaforms_feature -y --resolve-dependencies 2>&1
ynh_exec_as $app env PATH=$PATH drush @$app php-eval "module_load_include('inc', 'framaforms', 'includes/framaforms.pages');create_all_pages();" 2>&1 || true

#=================================================
# IMPORTING LANGUAGE PACK
#=================================================
ynh_script_progression --message="Importing language pack..." --weight=5

sudo -u $app env PATH=$PATH drush @$app pm-download -y drush_language
sudo -u $app env PATH=$PATH drush @$app pm-download -y l10n_update
sudo -u $app env PATH=$PATH drush @$app pm-enable -y l10n_update
sudo -u $app env PATH=$PATH drush @$app language-add $language -y
sudo -u $app env PATH=$PATH drush @$app language-default $language -y
sudo -u $app env PATH=$PATH drush @$app cache-clear drush -y
sudo -u $app env PATH=$PATH drush @$app l10n-update-refresh -y
sudo -u $app env PATH=$PATH drush @$app l10n-update -y

# We don't upgrade module to avoid to erase framaforms change 
# in drupal core and modules code
# see https://framagit.org/framasoft/framaforms/-/wikis/modifications
#sudo -u $app env PATH=$PATH drush @$app pm-update -y

#=================================================
# REMOVING BRANDING AND CHANGING DEFAULT SETTINGS
#=================================================
ynh_script_progression --message="Removing branding and change default settings..." --weight=1

sudo -u $app env PATH=$PATH drush @$app vset error_level 0
sudo -u $app env PATH=$PATH drush @$app vset framaforms_notification_period_value $expiration
sudo -u $app env PATH=$PATH drush @$app vset framaforms_deletion_period_value $deletion
# Remove framaforms footer
sudo -u $app env PATH=$PATH drush @$app sql-query "UPDATE block SET region='-1', status=0 WHERE delta='framaforms_footer' AND region='footer'"


#=================================================
# CONFIGURING LDAP
#=================================================
ynh_script_progression --message="Configuring LDAP authentication..." --weight=1

sudo -u $app env PATH=$PATH drush @$app pm-download ldap
sudo -u $app env PATH=$PATH drush @$app pm-enable -y ldap_servers ldap_user ldap_authentication ldap_authorization ldap_authorization_drupal_role
# Generated with sudo -u postgres pg_dump -a -t ldap_servers --inserts framaforms
sudo -u $app env PATH=$PATH drush @$app sql-query "INSERT INTO public.ldap_servers VALUES ('localhost', 1, 'localhost', 1, 'default', 'ldap://127.0.0.1', 389, 0, 0, 3, '', NULL, 'a:2:{i:0;s:27:\"ou=users,dc=yunohost,dc=org\";i:1;s:28:\"ou=groups,dc=yunohost,dc=org\";}', 'uid', 'uid', 'mail', '', '', '', 0, 'cn=%username,ou=users,dc=yunohost,dc=org', '', 'ljf', '', 0, 'groupofnamesynh', 0, 0, '', 'memberuid', 'dn', 0, '', 'all_users', '', 0, 1000, 0);"
cat ../conf/ldap.conf | sudo -u $app env PATH=$PATH drush @$app variable-set --format=yaml ldap_authentication_conf -

update-alternatives --set php /usr/bin/php${YNH_DEFAULT_PHP_VERSION}

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_script_progression --message="Storing the config file checksum..." --weight=1

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$config_file"

#=================================================
# SETUP THE CRON FILE
#=================================================
ynh_script_progression --message="Setuping the cron file..."

cp ../conf/cron /etc/cron.d/$app

ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="/etc/cron.d/$app"
ynh_replace_string --match_string="__APP__" --replace_string="$app" --target_file="/etc/cron.d/$app"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Securing files and directories..." --weight=1

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
